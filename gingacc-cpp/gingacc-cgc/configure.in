AC_INIT(configure.in)

AM_CONFIG_HEADER(config.h)
AM_INIT_AUTOMAKE(gingacc-cgc, 0.1.2)

AC_LANG_CPLUSPLUS
AC_PROG_CXX([g++])
AM_PROG_LIBTOOL

CXXFLAGS="-fPIC $CXXFLAGS"
CFLAGS="-fPIC $CFLAGS"

# Bring additional directories where things might be found into our
# search path. I don't know why autoconf doesn't do this by default
for spfx in /usr/lib/ /usr/local/lib/ /usr/local/lib/ginga/ /usr/local/lib/ginga/iocontents; do
if test -d ${spfx}; then
LDFLAGS="-L${spfx} $LDFLAGS"
fi
done

for spfx in /usr/include/ /usr/local/include/ /usr/local/include/ginga/; do
if test -d ${spfx}; then
CPPFLAGS="-I${spfx} $CPPFLAGS"
fi
done

###########
# HEADERS #
###########

###############
# Ginga-CC CM #
###############
AC_CHECK_HEADER([cm/IComponentManager.h], [], AC_MSG_ERROR([

Couldn't find Ginga Common Core Component Manager headers.
Please install gingacc-cm project.

]))

##################
# Ginga CC Tuner #
##################
AC_CHECK_HEADER([tuner/ITuner.h], [], AC_MSG_ERROR([

Couldn't find Ginga CC Tuner headers.
Please install Ginga CC Tuner Headers.

]))

########
# LIBS #
########

##################
# Ginga CC Tuner #
##################
AC_HAVE_LIBRARY(gingacctuner, , AC_ERROR([

Couldn't find Ginga CC Tuner library.
Please install Ginga CC Tuner Library.

]))

AC_OUTPUT(
    Makefile include/Makefile src/Makefile)
