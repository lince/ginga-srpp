# Makefile.in generated by automake 1.10 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
libgingaccsystemiocodemap_PROGRAMS =  \
	libgingaccsystemiocodemap.so$(EXEEXT)
libgingaccsystemiodfb_PROGRAMS = libgingaccsystemiodfb.so$(EXEEXT)
libgingaccsystemio_PROGRAMS = libgingaccsystemio.so$(EXEEXT)
subdir = src/io
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(libgingaccsystemiodir)" \
	"$(DESTDIR)$(libgingaccsystemiocodemapdir)" \
	"$(DESTDIR)$(libgingaccsystemiodfbdir)"
libgingaccsystemioPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
libgingaccsystemiocodemapPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
libgingaccsystemiodfbPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(libgingaccsystemio_PROGRAMS) \
	$(libgingaccsystemiocodemap_PROGRAMS) \
	$(libgingaccsystemiodfb_PROGRAMS)
am_libgingaccsystemio_so_OBJECTS = DeviceAudio.$(OBJEXT) \
	DeviceCommunication.$(OBJEXT) IODevice.$(OBJEXT) \
	GingaLocatorFactory.$(OBJEXT) InputManager.$(OBJEXT) \
	LocalDeviceManager.$(OBJEXT)
libgingaccsystemio_so_OBJECTS = $(am_libgingaccsystemio_so_OBJECTS)
am__DEPENDENCIES_1 =
libgingaccsystemio_so_DEPENDENCIES = $(am__DEPENDENCIES_1)
libgingaccsystemio_so_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(libgingaccsystemio_so_LDFLAGS) $(LDFLAGS) -o $@
am_libgingaccsystemiocodemap_so_OBJECTS = CodeMap.$(OBJEXT)
libgingaccsystemiocodemap_so_OBJECTS =  \
	$(am_libgingaccsystemiocodemap_so_OBJECTS)
libgingaccsystemiocodemap_so_LDADD = $(LDADD)
libgingaccsystemiocodemap_so_LINK = $(LIBTOOL) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) \
	$(libgingaccsystemiocodemap_so_LDFLAGS) $(LDFLAGS) -o $@
am_libgingaccsystemiodfb_so_OBJECTS = DFBDeviceScreen.$(OBJEXT) \
	DFBEventBuffer.$(OBJEXT) DFBGInputEvent.$(OBJEXT) \
	DFBSurface.$(OBJEXT) DFBWindow.$(OBJEXT)
libgingaccsystemiodfb_so_OBJECTS =  \
	$(am_libgingaccsystemiodfb_so_OBJECTS)
libgingaccsystemiodfb_so_DEPENDENCIES = $(am__DEPENDENCIES_1)
libgingaccsystemiodfb_so_LINK = $(LIBTOOL) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(libgingaccsystemiodfb_so_LDFLAGS) \
	$(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)@am__isrc@
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libgingaccsystemio_so_SOURCES) \
	$(libgingaccsystemiocodemap_so_SOURCES) \
	$(libgingaccsystemiodfb_so_SOURCES)
DIST_SOURCES = $(libgingaccsystemio_so_SOURCES) \
	$(libgingaccsystemiocodemap_so_SOURCES) \
	$(libgingaccsystemiodfb_so_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
COMPONENTS_LIBS = @COMPONENTS_LIBS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DFB_LIBS = @DFB_LIBS@
DIRECTFB_BINARY_AGE = @DIRECTFB_BINARY_AGE@
DIRECTFB_INTERFACE_AGE = @DIRECTFB_INTERFACE_AGE@
DIRECTFB_MAJOR_VERSION = @DIRECTFB_MAJOR_VERSION@
DIRECTFB_MICRO_VERSION = @DIRECTFB_MICRO_VERSION@
DIRECTFB_MINOR_VERSION = @DIRECTFB_MINOR_VERSION@
DIRECTFB_VERSION = @DIRECTFB_VERSION@
DVC_LIBS = @DVC_LIBS@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
FFMPEG_CFLAGS = @FFMPEG_CFLAGS@
FFMPEG_LIBS = @FFMPEG_LIBS@
FUSIONSOUND_LIBS = @FUSIONSOUND_LIBS@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = 
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
RANLIB = @RANLIB@
RECOMMENDER_LIBS = @RECOMMENDER_LIBS@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@

# set the include path found by configure
INCLUDES = -I/usr/local/include/ginga/ -I/usr/local/include/directfb/ \
	$(all_includes)


#####################
libgingaccsystemiocodemapdir = /usr/local/lib/ginga
libgingaccsystemiocodemap_so_LDFLAGS = -shared \
    -Wl,-soname,libgingaccsystemiocodemap.so \
    -L/usr/local/lib -L/usr/local/lib/ginga -L../thread -L./

libgingaccsystemiocodemap_so_SOURCES = interface/input/CodeMap.cpp

#####################
libgingaccsystemiodfbdir = /usr/local/lib/ginga
libgingaccsystemiodfb_so_LDFLAGS = -Wl,-soname,libgingaccsystemiodfb.so \
    -shared -L/usr/local/lib -L/usr/local/lib/ginga -L../thread -L./

libgingaccsystemiodfb_so_SOURCES = interface/device/dfb/DFBDeviceScreen.cpp \
	interface/input/dfb/DFBEventBuffer.cpp \
	interface/input/dfb/DFBGInputEvent.cpp \
	interface/output/dfb/DFBSurface.cpp interface/output/dfb/DFBWindow.cpp 

libgingaccsystemiodfb_so_LDADD = $(DFB_LIBS) -ltelemidiautil -lpthread \
    -lgingaccsystemthread -lgingaccsystemio -lgingaccsystemiocodemap


######################
libgingaccsystemiodir = /usr/local/lib/ginga
libgingaccsystemio_so_LDFLAGS = -Wl,-soname,libgingaccsystemio.so -shared \
	-L/usr/local/lib -L/usr/local/lib/ginga -L../thread

libgingaccsystemio_so_SOURCES = interface/device/DeviceAudio.cpp \
	interface/device/DeviceCommunication.cpp \
	interface/device/IODevice.cpp \
	GingaLocatorFactory.cpp InputManager.cpp LocalDeviceManager.cpp

libgingaccsystemio_so_LDADD = -ltelemidiautil -lpthread \
    -lgingaccsystemthread -lgingarecommenderlocalagent $(COMPONENTS_LIBS)

all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/io/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/io/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-libgingaccsystemioPROGRAMS: $(libgingaccsystemio_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(libgingaccsystemiodir)" || $(MKDIR_P) "$(DESTDIR)$(libgingaccsystemiodir)"
	@list='$(libgingaccsystemio_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(libgingaccsystemioPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(libgingaccsystemiodir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(libgingaccsystemioPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(libgingaccsystemiodir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-libgingaccsystemioPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(libgingaccsystemio_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(libgingaccsystemiodir)/$$f'"; \
	  rm -f "$(DESTDIR)$(libgingaccsystemiodir)/$$f"; \
	done

clean-libgingaccsystemioPROGRAMS:
	@list='$(libgingaccsystemio_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
install-libgingaccsystemiocodemapPROGRAMS: $(libgingaccsystemiocodemap_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(libgingaccsystemiocodemapdir)" || $(MKDIR_P) "$(DESTDIR)$(libgingaccsystemiocodemapdir)"
	@list='$(libgingaccsystemiocodemap_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(libgingaccsystemiocodemapPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(libgingaccsystemiocodemapdir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(libgingaccsystemiocodemapPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(libgingaccsystemiocodemapdir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-libgingaccsystemiocodemapPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(libgingaccsystemiocodemap_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(libgingaccsystemiocodemapdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(libgingaccsystemiocodemapdir)/$$f"; \
	done

clean-libgingaccsystemiocodemapPROGRAMS:
	@list='$(libgingaccsystemiocodemap_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
install-libgingaccsystemiodfbPROGRAMS: $(libgingaccsystemiodfb_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(libgingaccsystemiodfbdir)" || $(MKDIR_P) "$(DESTDIR)$(libgingaccsystemiodfbdir)"
	@list='$(libgingaccsystemiodfb_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(libgingaccsystemiodfbPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(libgingaccsystemiodfbdir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(libgingaccsystemiodfbPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(libgingaccsystemiodfbdir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-libgingaccsystemiodfbPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(libgingaccsystemiodfb_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(libgingaccsystemiodfbdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(libgingaccsystemiodfbdir)/$$f"; \
	done

clean-libgingaccsystemiodfbPROGRAMS:
	@list='$(libgingaccsystemiodfb_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
libgingaccsystemio.so$(EXEEXT): $(libgingaccsystemio_so_OBJECTS) $(libgingaccsystemio_so_DEPENDENCIES) 
	@rm -f libgingaccsystemio.so$(EXEEXT)
	$(libgingaccsystemio_so_LINK) $(libgingaccsystemio_so_OBJECTS) $(libgingaccsystemio_so_LDADD) $(LIBS)
libgingaccsystemiocodemap.so$(EXEEXT): $(libgingaccsystemiocodemap_so_OBJECTS) $(libgingaccsystemiocodemap_so_DEPENDENCIES) 
	@rm -f libgingaccsystemiocodemap.so$(EXEEXT)
	$(libgingaccsystemiocodemap_so_LINK) $(libgingaccsystemiocodemap_so_OBJECTS) $(libgingaccsystemiocodemap_so_LDADD) $(LIBS)
libgingaccsystemiodfb.so$(EXEEXT): $(libgingaccsystemiodfb_so_OBJECTS) $(libgingaccsystemiodfb_so_DEPENDENCIES) 
	@rm -f libgingaccsystemiodfb.so$(EXEEXT)
	$(libgingaccsystemiodfb_so_LINK) $(libgingaccsystemiodfb_so_OBJECTS) $(libgingaccsystemiodfb_so_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CodeMap.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DFBDeviceScreen.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DFBEventBuffer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DFBGInputEvent.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DFBSurface.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DFBWindow.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DeviceAudio.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DeviceCommunication.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/GingaLocatorFactory.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/IODevice.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/InputManager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LocalDeviceManager.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

DeviceAudio.o: interface/device/DeviceAudio.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DeviceAudio.o -MD -MP -MF $(DEPDIR)/DeviceAudio.Tpo -c -o DeviceAudio.o `test -f 'interface/device/DeviceAudio.cpp' || echo '$(srcdir)/'`interface/device/DeviceAudio.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/DeviceAudio.Tpo $(DEPDIR)/DeviceAudio.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='interface/device/DeviceAudio.cpp' object='DeviceAudio.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DeviceAudio.o `test -f 'interface/device/DeviceAudio.cpp' || echo '$(srcdir)/'`interface/device/DeviceAudio.cpp

DeviceAudio.obj: interface/device/DeviceAudio.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DeviceAudio.obj -MD -MP -MF $(DEPDIR)/DeviceAudio.Tpo -c -o DeviceAudio.obj `if test -f 'interface/device/DeviceAudio.cpp'; then $(CYGPATH_W) 'interface/device/DeviceAudio.cpp'; else $(CYGPATH_W) '$(srcdir)/interface/device/DeviceAudio.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/DeviceAudio.Tpo $(DEPDIR)/DeviceAudio.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='interface/device/DeviceAudio.cpp' object='DeviceAudio.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DeviceAudio.obj `if test -f 'interface/device/DeviceAudio.cpp'; then $(CYGPATH_W) 'interface/device/DeviceAudio.cpp'; else $(CYGPATH_W) '$(srcdir)/interface/device/DeviceAudio.cpp'; fi`

DeviceCommunication.o: interface/device/DeviceCommunication.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DeviceCommunication.o -MD -MP -MF $(DEPDIR)/DeviceCommunication.Tpo -c -o DeviceCommunication.o `test -f 'interface/device/DeviceCommunication.cpp' || echo '$(srcdir)/'`interface/device/DeviceCommunication.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/DeviceCommunication.Tpo $(DEPDIR)/DeviceCommunication.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='interface/device/DeviceCommunication.cpp' object='DeviceCommunication.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DeviceCommunication.o `test -f 'interface/device/DeviceCommunication.cpp' || echo '$(srcdir)/'`interface/device/DeviceCommunication.cpp

DeviceCommunication.obj: interface/device/DeviceCommunication.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DeviceCommunication.obj -MD -MP -MF $(DEPDIR)/DeviceCommunication.Tpo -c -o DeviceCommunication.obj `if test -f 'interface/device/DeviceCommunication.cpp'; then $(CYGPATH_W) 'interface/device/DeviceCommunication.cpp'; else $(CYGPATH_W) '$(srcdir)/interface/device/DeviceCommunication.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/DeviceCommunication.Tpo $(DEPDIR)/DeviceCommunication.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='interface/device/DeviceCommunication.cpp' object='DeviceCommunication.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DeviceCommunication.obj `if test -f 'interface/device/DeviceCommunication.cpp'; then $(CYGPATH_W) 'interface/device/DeviceCommunication.cpp'; else $(CYGPATH_W) '$(srcdir)/interface/device/DeviceCommunication.cpp'; fi`

IODevice.o: interface/device/IODevice.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT IODevice.o -MD -MP -MF $(DEPDIR)/IODevice.Tpo -c -o IODevice.o `test -f 'interface/device/IODevice.cpp' || echo '$(srcdir)/'`interface/device/IODevice.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/IODevice.Tpo $(DEPDIR)/IODevice.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='interface/device/IODevice.cpp' object='IODevice.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o IODevice.o `test -f 'interface/device/IODevice.cpp' || echo '$(srcdir)/'`interface/device/IODevice.cpp

IODevice.obj: interface/device/IODevice.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT IODevice.obj -MD -MP -MF $(DEPDIR)/IODevice.Tpo -c -o IODevice.obj `if test -f 'interface/device/IODevice.cpp'; then $(CYGPATH_W) 'interface/device/IODevice.cpp'; else $(CYGPATH_W) '$(srcdir)/interface/device/IODevice.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/IODevice.Tpo $(DEPDIR)/IODevice.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='interface/device/IODevice.cpp' object='IODevice.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o IODevice.obj `if test -f 'interface/device/IODevice.cpp'; then $(CYGPATH_W) 'interface/device/IODevice.cpp'; else $(CYGPATH_W) '$(srcdir)/interface/device/IODevice.cpp'; fi`

CodeMap.o: interface/input/CodeMap.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CodeMap.o -MD -MP -MF $(DEPDIR)/CodeMap.Tpo -c -o CodeMap.o `test -f 'interface/input/CodeMap.cpp' || echo '$(srcdir)/'`interface/input/CodeMap.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/CodeMap.Tpo $(DEPDIR)/CodeMap.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='interface/input/CodeMap.cpp' object='CodeMap.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CodeMap.o `test -f 'interface/input/CodeMap.cpp' || echo '$(srcdir)/'`interface/input/CodeMap.cpp

CodeMap.obj: interface/input/CodeMap.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CodeMap.obj -MD -MP -MF $(DEPDIR)/CodeMap.Tpo -c -o CodeMap.obj `if test -f 'interface/input/CodeMap.cpp'; then $(CYGPATH_W) 'interface/input/CodeMap.cpp'; else $(CYGPATH_W) '$(srcdir)/interface/input/CodeMap.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/CodeMap.Tpo $(DEPDIR)/CodeMap.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='interface/input/CodeMap.cpp' object='CodeMap.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CodeMap.obj `if test -f 'interface/input/CodeMap.cpp'; then $(CYGPATH_W) 'interface/input/CodeMap.cpp'; else $(CYGPATH_W) '$(srcdir)/interface/input/CodeMap.cpp'; fi`

DFBDeviceScreen.o: interface/device/dfb/DFBDeviceScreen.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DFBDeviceScreen.o -MD -MP -MF $(DEPDIR)/DFBDeviceScreen.Tpo -c -o DFBDeviceScreen.o `test -f 'interface/device/dfb/DFBDeviceScreen.cpp' || echo '$(srcdir)/'`interface/device/dfb/DFBDeviceScreen.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/DFBDeviceScreen.Tpo $(DEPDIR)/DFBDeviceScreen.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='interface/device/dfb/DFBDeviceScreen.cpp' object='DFBDeviceScreen.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DFBDeviceScreen.o `test -f 'interface/device/dfb/DFBDeviceScreen.cpp' || echo '$(srcdir)/'`interface/device/dfb/DFBDeviceScreen.cpp

DFBDeviceScreen.obj: interface/device/dfb/DFBDeviceScreen.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DFBDeviceScreen.obj -MD -MP -MF $(DEPDIR)/DFBDeviceScreen.Tpo -c -o DFBDeviceScreen.obj `if test -f 'interface/device/dfb/DFBDeviceScreen.cpp'; then $(CYGPATH_W) 'interface/device/dfb/DFBDeviceScreen.cpp'; else $(CYGPATH_W) '$(srcdir)/interface/device/dfb/DFBDeviceScreen.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/DFBDeviceScreen.Tpo $(DEPDIR)/DFBDeviceScreen.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='interface/device/dfb/DFBDeviceScreen.cpp' object='DFBDeviceScreen.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DFBDeviceScreen.obj `if test -f 'interface/device/dfb/DFBDeviceScreen.cpp'; then $(CYGPATH_W) 'interface/device/dfb/DFBDeviceScreen.cpp'; else $(CYGPATH_W) '$(srcdir)/interface/device/dfb/DFBDeviceScreen.cpp'; fi`

DFBEventBuffer.o: interface/input/dfb/DFBEventBuffer.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DFBEventBuffer.o -MD -MP -MF $(DEPDIR)/DFBEventBuffer.Tpo -c -o DFBEventBuffer.o `test -f 'interface/input/dfb/DFBEventBuffer.cpp' || echo '$(srcdir)/'`interface/input/dfb/DFBEventBuffer.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/DFBEventBuffer.Tpo $(DEPDIR)/DFBEventBuffer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='interface/input/dfb/DFBEventBuffer.cpp' object='DFBEventBuffer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DFBEventBuffer.o `test -f 'interface/input/dfb/DFBEventBuffer.cpp' || echo '$(srcdir)/'`interface/input/dfb/DFBEventBuffer.cpp

DFBEventBuffer.obj: interface/input/dfb/DFBEventBuffer.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DFBEventBuffer.obj -MD -MP -MF $(DEPDIR)/DFBEventBuffer.Tpo -c -o DFBEventBuffer.obj `if test -f 'interface/input/dfb/DFBEventBuffer.cpp'; then $(CYGPATH_W) 'interface/input/dfb/DFBEventBuffer.cpp'; else $(CYGPATH_W) '$(srcdir)/interface/input/dfb/DFBEventBuffer.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/DFBEventBuffer.Tpo $(DEPDIR)/DFBEventBuffer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='interface/input/dfb/DFBEventBuffer.cpp' object='DFBEventBuffer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DFBEventBuffer.obj `if test -f 'interface/input/dfb/DFBEventBuffer.cpp'; then $(CYGPATH_W) 'interface/input/dfb/DFBEventBuffer.cpp'; else $(CYGPATH_W) '$(srcdir)/interface/input/dfb/DFBEventBuffer.cpp'; fi`

DFBGInputEvent.o: interface/input/dfb/DFBGInputEvent.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DFBGInputEvent.o -MD -MP -MF $(DEPDIR)/DFBGInputEvent.Tpo -c -o DFBGInputEvent.o `test -f 'interface/input/dfb/DFBGInputEvent.cpp' || echo '$(srcdir)/'`interface/input/dfb/DFBGInputEvent.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/DFBGInputEvent.Tpo $(DEPDIR)/DFBGInputEvent.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='interface/input/dfb/DFBGInputEvent.cpp' object='DFBGInputEvent.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DFBGInputEvent.o `test -f 'interface/input/dfb/DFBGInputEvent.cpp' || echo '$(srcdir)/'`interface/input/dfb/DFBGInputEvent.cpp

DFBGInputEvent.obj: interface/input/dfb/DFBGInputEvent.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DFBGInputEvent.obj -MD -MP -MF $(DEPDIR)/DFBGInputEvent.Tpo -c -o DFBGInputEvent.obj `if test -f 'interface/input/dfb/DFBGInputEvent.cpp'; then $(CYGPATH_W) 'interface/input/dfb/DFBGInputEvent.cpp'; else $(CYGPATH_W) '$(srcdir)/interface/input/dfb/DFBGInputEvent.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/DFBGInputEvent.Tpo $(DEPDIR)/DFBGInputEvent.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='interface/input/dfb/DFBGInputEvent.cpp' object='DFBGInputEvent.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DFBGInputEvent.obj `if test -f 'interface/input/dfb/DFBGInputEvent.cpp'; then $(CYGPATH_W) 'interface/input/dfb/DFBGInputEvent.cpp'; else $(CYGPATH_W) '$(srcdir)/interface/input/dfb/DFBGInputEvent.cpp'; fi`

DFBSurface.o: interface/output/dfb/DFBSurface.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DFBSurface.o -MD -MP -MF $(DEPDIR)/DFBSurface.Tpo -c -o DFBSurface.o `test -f 'interface/output/dfb/DFBSurface.cpp' || echo '$(srcdir)/'`interface/output/dfb/DFBSurface.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/DFBSurface.Tpo $(DEPDIR)/DFBSurface.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='interface/output/dfb/DFBSurface.cpp' object='DFBSurface.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DFBSurface.o `test -f 'interface/output/dfb/DFBSurface.cpp' || echo '$(srcdir)/'`interface/output/dfb/DFBSurface.cpp

DFBSurface.obj: interface/output/dfb/DFBSurface.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DFBSurface.obj -MD -MP -MF $(DEPDIR)/DFBSurface.Tpo -c -o DFBSurface.obj `if test -f 'interface/output/dfb/DFBSurface.cpp'; then $(CYGPATH_W) 'interface/output/dfb/DFBSurface.cpp'; else $(CYGPATH_W) '$(srcdir)/interface/output/dfb/DFBSurface.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/DFBSurface.Tpo $(DEPDIR)/DFBSurface.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='interface/output/dfb/DFBSurface.cpp' object='DFBSurface.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DFBSurface.obj `if test -f 'interface/output/dfb/DFBSurface.cpp'; then $(CYGPATH_W) 'interface/output/dfb/DFBSurface.cpp'; else $(CYGPATH_W) '$(srcdir)/interface/output/dfb/DFBSurface.cpp'; fi`

DFBWindow.o: interface/output/dfb/DFBWindow.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DFBWindow.o -MD -MP -MF $(DEPDIR)/DFBWindow.Tpo -c -o DFBWindow.o `test -f 'interface/output/dfb/DFBWindow.cpp' || echo '$(srcdir)/'`interface/output/dfb/DFBWindow.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/DFBWindow.Tpo $(DEPDIR)/DFBWindow.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='interface/output/dfb/DFBWindow.cpp' object='DFBWindow.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DFBWindow.o `test -f 'interface/output/dfb/DFBWindow.cpp' || echo '$(srcdir)/'`interface/output/dfb/DFBWindow.cpp

DFBWindow.obj: interface/output/dfb/DFBWindow.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DFBWindow.obj -MD -MP -MF $(DEPDIR)/DFBWindow.Tpo -c -o DFBWindow.obj `if test -f 'interface/output/dfb/DFBWindow.cpp'; then $(CYGPATH_W) 'interface/output/dfb/DFBWindow.cpp'; else $(CYGPATH_W) '$(srcdir)/interface/output/dfb/DFBWindow.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/DFBWindow.Tpo $(DEPDIR)/DFBWindow.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='interface/output/dfb/DFBWindow.cpp' object='DFBWindow.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DFBWindow.obj `if test -f 'interface/output/dfb/DFBWindow.cpp'; then $(CYGPATH_W) 'interface/output/dfb/DFBWindow.cpp'; else $(CYGPATH_W) '$(srcdir)/interface/output/dfb/DFBWindow.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(libgingaccsystemiodir)" "$(DESTDIR)$(libgingaccsystemiocodemapdir)" "$(DESTDIR)$(libgingaccsystemiodfbdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libgingaccsystemioPROGRAMS \
	clean-libgingaccsystemiocodemapPROGRAMS \
	clean-libgingaccsystemiodfbPROGRAMS clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-libgingaccsystemioPROGRAMS \
	install-libgingaccsystemiocodemapPROGRAMS \
	install-libgingaccsystemiodfbPROGRAMS

install-dvi: install-dvi-am

install-exec-am:

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-libgingaccsystemioPROGRAMS \
	uninstall-libgingaccsystemiocodemapPROGRAMS \
	uninstall-libgingaccsystemiodfbPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libgingaccsystemioPROGRAMS \
	clean-libgingaccsystemiocodemapPROGRAMS \
	clean-libgingaccsystemiodfbPROGRAMS clean-libtool ctags \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-libgingaccsystemioPROGRAMS \
	install-libgingaccsystemiocodemapPROGRAMS \
	install-libgingaccsystemiodfbPROGRAMS install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am \
	uninstall-libgingaccsystemioPROGRAMS \
	uninstall-libgingaccsystemiocodemapPROGRAMS \
	uninstall-libgingaccsystemiodfbPROGRAMS

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
