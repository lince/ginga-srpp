# Makefile.in generated by automake 1.10 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




pkgdatadir = $(datadir)/gingaccdataprocessing
pkglibdir = $(libdir)/gingaccdataprocessing
pkgincludedir = $(includedir)/gingaccdataprocessing
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
localLib_PROGRAMS = libgingaccdataprocessing.so$(EXEEXT)
subdir = src
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(localLibdir)"
localLibPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(localLib_PROGRAMS)
am_libgingaccdataprocessing_so_OBJECTS = DataProcessor.$(OBJEXT) \
	EPGProcessor.$(OBJEXT) FilterManager.$(OBJEXT) \
	SectionFilter.$(OBJEXT) TransportSection.$(OBJEXT) \
	StreamEvent.$(OBJEXT) Binding.$(OBJEXT) Biop.$(OBJEXT) \
	Ior.$(OBJEXT) ServiceDomain.$(OBJEXT) \
	DownloadDataBlock.$(OBJEXT) DownloadInfoIndication.$(OBJEXT) \
	DownloadServerInitiate.$(OBJEXT) DsmccMessageHeader.$(OBJEXT) \
	MessageProcessor.$(OBJEXT) Module.$(OBJEXT) Object.$(OBJEXT) \
	ObjectProcessor.$(OBJEXT) Crc.$(OBJEXT) Descriptor.$(OBJEXT) \
	DSMCCSectionPayload.$(OBJEXT) NPTProcessor.$(OBJEXT) \
	NPTReference.$(OBJEXT) Stc.$(OBJEXT) StreamMode.$(OBJEXT) \
	TimeBaseClock.$(OBJEXT)
libgingaccdataprocessing_so_OBJECTS =  \
	$(am_libgingaccdataprocessing_so_OBJECTS)
am__DEPENDENCIES_1 =
libgingaccdataprocessing_so_DEPENDENCIES = $(am__DEPENDENCIES_1)
libgingaccdataprocessing_so_LINK = $(LIBTOOL) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) \
	$(libgingaccdataprocessing_so_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libgingaccdataprocessing_so_SOURCES)
DIST_SOURCES = $(libgingaccdataprocessing_so_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /usr/src/gingaUFSCAR/gingacc-cpp/gingacc-dataprocessing/missing --run aclocal-1.10
AMTAR = ${SHELL} /usr/src/gingaUFSCAR/gingacc-cpp/gingacc-dataprocessing/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /usr/src/gingaUFSCAR/gingacc-cpp/gingacc-dataprocessing/missing --run autoconf
AUTOHEADER = ${SHELL} /usr/src/gingaUFSCAR/gingacc-cpp/gingacc-dataprocessing/missing --run autoheader
AUTOMAKE = ${SHELL} /usr/src/gingaUFSCAR/gingacc-cpp/gingacc-dataprocessing/missing --run automake-1.10
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -fPIC -g -O2
COMPONENTS_LIBS = -ldl
CPP = gcc -E
CPPFLAGS = -I/usr/local/include/ginga -I/usr/local/include -I/usr/include 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -fPIC -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
F77 = 
FFLAGS = 
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = -L/usr/local/lib/ginga -L/usr/local/lib -L/usr/lib 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /usr/src/gingaUFSCAR/gingacc-cpp/gingacc-dataprocessing/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
OBJEXT = o
PACKAGE = gingaccdataprocessing
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VERSION = 0.11.2
abs_builddir = /usr/src/gingaUFSCAR/gingacc-cpp/gingacc-dataprocessing/src
abs_srcdir = /usr/src/gingaUFSCAR/gingacc-cpp/gingacc-dataprocessing/src
abs_top_builddir = /usr/src/gingaUFSCAR/gingacc-cpp/gingacc-dataprocessing
abs_top_srcdir = /usr/src/gingaUFSCAR/gingacc-cpp/gingacc-dataprocessing
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_F77 = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /usr/src/gingaUFSCAR/gingacc-cpp/gingacc-dataprocessing/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_builddir = ..
top_srcdir = ..

# set the include path found by configure
INCLUDES = -I/usr/local/include/ginga/ $(all_includes)

# the library search path.
localLibdir = /usr/local/lib/ginga
libgingaccdataprocessing_so_LDFLAGS = -Wl,-soname,libgingaccdataprocessing.so \
	-shared -L/usr/local/lib -L/usr/local/lib/ginga

libgingaccdataprocessing_so_SOURCES = DataProcessor.cpp EPGProcessor.cpp \
    FilterManager.cpp SectionFilter.cpp \
    TransportSection.cpp \
    dsmcc/StreamEvent.cpp dsmcc/carousel/Binding.cpp dsmcc/carousel/Biop.cpp \
    dsmcc/carousel/Ior.cpp dsmcc/carousel/ServiceDomain.cpp \
    dsmcc/carousel/data/DownloadDataBlock.cpp \
    dsmcc/carousel/data/DownloadInfoIndication.cpp \
    dsmcc/carousel/data/DownloadServerInitiate.cpp \
    dsmcc/carousel/data/DsmccMessageHeader.cpp \
    dsmcc/carousel/data/MessageProcessor.cpp \
    dsmcc/carousel/data/Module.cpp \
    dsmcc/carousel/object/Object.cpp \
    dsmcc/carousel/object/ObjectProcessor.cpp \
    dsmcc/npt/Crc.cpp dsmcc/npt/Descriptor.cpp \
    dsmcc/npt/DSMCCSectionPayload.cpp dsmcc/npt/NPTProcessor.cpp \
    dsmcc/npt/NPTReference.cpp dsmcc/npt/Stc.cpp dsmcc/npt/StreamMode.cpp \
    dsmcc/npt/TimeBaseClock.cpp

libgingaccdataprocessing_so_LDADD = -ltelemidiautil -lgingaccsystemthread \
    $(COMPONENTS_LIBS) -L/usr/local/lib/ -L/usr/local/lib/ginga/

all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-localLibPROGRAMS: $(localLib_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(localLibdir)" || $(MKDIR_P) "$(DESTDIR)$(localLibdir)"
	@list='$(localLib_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(localLibPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(localLibdir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(localLibPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(localLibdir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-localLibPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(localLib_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(localLibdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(localLibdir)/$$f"; \
	done

clean-localLibPROGRAMS:
	@list='$(localLib_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
libgingaccdataprocessing.so$(EXEEXT): $(libgingaccdataprocessing_so_OBJECTS) $(libgingaccdataprocessing_so_DEPENDENCIES) 
	@rm -f libgingaccdataprocessing.so$(EXEEXT)
	$(libgingaccdataprocessing_so_LINK) $(libgingaccdataprocessing_so_OBJECTS) $(libgingaccdataprocessing_so_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/Binding.Po
include ./$(DEPDIR)/Biop.Po
include ./$(DEPDIR)/Crc.Po
include ./$(DEPDIR)/DSMCCSectionPayload.Po
include ./$(DEPDIR)/DataProcessor.Po
include ./$(DEPDIR)/Descriptor.Po
include ./$(DEPDIR)/DownloadDataBlock.Po
include ./$(DEPDIR)/DownloadInfoIndication.Po
include ./$(DEPDIR)/DownloadServerInitiate.Po
include ./$(DEPDIR)/DsmccMessageHeader.Po
include ./$(DEPDIR)/EPGProcessor.Po
include ./$(DEPDIR)/FilterManager.Po
include ./$(DEPDIR)/Ior.Po
include ./$(DEPDIR)/MessageProcessor.Po
include ./$(DEPDIR)/Module.Po
include ./$(DEPDIR)/NPTProcessor.Po
include ./$(DEPDIR)/NPTReference.Po
include ./$(DEPDIR)/Object.Po
include ./$(DEPDIR)/ObjectProcessor.Po
include ./$(DEPDIR)/SectionFilter.Po
include ./$(DEPDIR)/ServiceDomain.Po
include ./$(DEPDIR)/Stc.Po
include ./$(DEPDIR)/StreamEvent.Po
include ./$(DEPDIR)/StreamMode.Po
include ./$(DEPDIR)/TimeBaseClock.Po
include ./$(DEPDIR)/TransportSection.Po

.cpp.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

StreamEvent.o: dsmcc/StreamEvent.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT StreamEvent.o -MD -MP -MF $(DEPDIR)/StreamEvent.Tpo -c -o StreamEvent.o `test -f 'dsmcc/StreamEvent.cpp' || echo '$(srcdir)/'`dsmcc/StreamEvent.cpp
	mv -f $(DEPDIR)/StreamEvent.Tpo $(DEPDIR)/StreamEvent.Po
#	source='dsmcc/StreamEvent.cpp' object='StreamEvent.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o StreamEvent.o `test -f 'dsmcc/StreamEvent.cpp' || echo '$(srcdir)/'`dsmcc/StreamEvent.cpp

StreamEvent.obj: dsmcc/StreamEvent.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT StreamEvent.obj -MD -MP -MF $(DEPDIR)/StreamEvent.Tpo -c -o StreamEvent.obj `if test -f 'dsmcc/StreamEvent.cpp'; then $(CYGPATH_W) 'dsmcc/StreamEvent.cpp'; else $(CYGPATH_W) '$(srcdir)/dsmcc/StreamEvent.cpp'; fi`
	mv -f $(DEPDIR)/StreamEvent.Tpo $(DEPDIR)/StreamEvent.Po
#	source='dsmcc/StreamEvent.cpp' object='StreamEvent.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o StreamEvent.obj `if test -f 'dsmcc/StreamEvent.cpp'; then $(CYGPATH_W) 'dsmcc/StreamEvent.cpp'; else $(CYGPATH_W) '$(srcdir)/dsmcc/StreamEvent.cpp'; fi`

Binding.o: dsmcc/carousel/Binding.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Binding.o -MD -MP -MF $(DEPDIR)/Binding.Tpo -c -o Binding.o `test -f 'dsmcc/carousel/Binding.cpp' || echo '$(srcdir)/'`dsmcc/carousel/Binding.cpp
	mv -f $(DEPDIR)/Binding.Tpo $(DEPDIR)/Binding.Po
#	source='dsmcc/carousel/Binding.cpp' object='Binding.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Binding.o `test -f 'dsmcc/carousel/Binding.cpp' || echo '$(srcdir)/'`dsmcc/carousel/Binding.cpp

Binding.obj: dsmcc/carousel/Binding.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Binding.obj -MD -MP -MF $(DEPDIR)/Binding.Tpo -c -o Binding.obj `if test -f 'dsmcc/carousel/Binding.cpp'; then $(CYGPATH_W) 'dsmcc/carousel/Binding.cpp'; else $(CYGPATH_W) '$(srcdir)/dsmcc/carousel/Binding.cpp'; fi`
	mv -f $(DEPDIR)/Binding.Tpo $(DEPDIR)/Binding.Po
#	source='dsmcc/carousel/Binding.cpp' object='Binding.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Binding.obj `if test -f 'dsmcc/carousel/Binding.cpp'; then $(CYGPATH_W) 'dsmcc/carousel/Binding.cpp'; else $(CYGPATH_W) '$(srcdir)/dsmcc/carousel/Binding.cpp'; fi`

Biop.o: dsmcc/carousel/Biop.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Biop.o -MD -MP -MF $(DEPDIR)/Biop.Tpo -c -o Biop.o `test -f 'dsmcc/carousel/Biop.cpp' || echo '$(srcdir)/'`dsmcc/carousel/Biop.cpp
	mv -f $(DEPDIR)/Biop.Tpo $(DEPDIR)/Biop.Po
#	source='dsmcc/carousel/Biop.cpp' object='Biop.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Biop.o `test -f 'dsmcc/carousel/Biop.cpp' || echo '$(srcdir)/'`dsmcc/carousel/Biop.cpp

Biop.obj: dsmcc/carousel/Biop.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Biop.obj -MD -MP -MF $(DEPDIR)/Biop.Tpo -c -o Biop.obj `if test -f 'dsmcc/carousel/Biop.cpp'; then $(CYGPATH_W) 'dsmcc/carousel/Biop.cpp'; else $(CYGPATH_W) '$(srcdir)/dsmcc/carousel/Biop.cpp'; fi`
	mv -f $(DEPDIR)/Biop.Tpo $(DEPDIR)/Biop.Po
#	source='dsmcc/carousel/Biop.cpp' object='Biop.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Biop.obj `if test -f 'dsmcc/carousel/Biop.cpp'; then $(CYGPATH_W) 'dsmcc/carousel/Biop.cpp'; else $(CYGPATH_W) '$(srcdir)/dsmcc/carousel/Biop.cpp'; fi`

Ior.o: dsmcc/carousel/Ior.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Ior.o -MD -MP -MF $(DEPDIR)/Ior.Tpo -c -o Ior.o `test -f 'dsmcc/carousel/Ior.cpp' || echo '$(srcdir)/'`dsmcc/carousel/Ior.cpp
	mv -f $(DEPDIR)/Ior.Tpo $(DEPDIR)/Ior.Po
#	source='dsmcc/carousel/Ior.cpp' object='Ior.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Ior.o `test -f 'dsmcc/carousel/Ior.cpp' || echo '$(srcdir)/'`dsmcc/carousel/Ior.cpp

Ior.obj: dsmcc/carousel/Ior.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Ior.obj -MD -MP -MF $(DEPDIR)/Ior.Tpo -c -o Ior.obj `if test -f 'dsmcc/carousel/Ior.cpp'; then $(CYGPATH_W) 'dsmcc/carousel/Ior.cpp'; else $(CYGPATH_W) '$(srcdir)/dsmcc/carousel/Ior.cpp'; fi`
	mv -f $(DEPDIR)/Ior.Tpo $(DEPDIR)/Ior.Po
#	source='dsmcc/carousel/Ior.cpp' object='Ior.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Ior.obj `if test -f 'dsmcc/carousel/Ior.cpp'; then $(CYGPATH_W) 'dsmcc/carousel/Ior.cpp'; else $(CYGPATH_W) '$(srcdir)/dsmcc/carousel/Ior.cpp'; fi`

ServiceDomain.o: dsmcc/carousel/ServiceDomain.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ServiceDomain.o -MD -MP -MF $(DEPDIR)/ServiceDomain.Tpo -c -o ServiceDomain.o `test -f 'dsmcc/carousel/ServiceDomain.cpp' || echo '$(srcdir)/'`dsmcc/carousel/ServiceDomain.cpp
	mv -f $(DEPDIR)/ServiceDomain.Tpo $(DEPDIR)/ServiceDomain.Po
#	source='dsmcc/carousel/ServiceDomain.cpp' object='ServiceDomain.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ServiceDomain.o `test -f 'dsmcc/carousel/ServiceDomain.cpp' || echo '$(srcdir)/'`dsmcc/carousel/ServiceDomain.cpp

ServiceDomain.obj: dsmcc/carousel/ServiceDomain.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ServiceDomain.obj -MD -MP -MF $(DEPDIR)/ServiceDomain.Tpo -c -o ServiceDomain.obj `if test -f 'dsmcc/carousel/ServiceDomain.cpp'; then $(CYGPATH_W) 'dsmcc/carousel/ServiceDomain.cpp'; else $(CYGPATH_W) '$(srcdir)/dsmcc/carousel/ServiceDomain.cpp'; fi`
	mv -f $(DEPDIR)/ServiceDomain.Tpo $(DEPDIR)/ServiceDomain.Po
#	source='dsmcc/carousel/ServiceDomain.cpp' object='ServiceDomain.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ServiceDomain.obj `if test -f 'dsmcc/carousel/ServiceDomain.cpp'; then $(CYGPATH_W) 'dsmcc/carousel/ServiceDomain.cpp'; else $(CYGPATH_W) '$(srcdir)/dsmcc/carousel/ServiceDomain.cpp'; fi`

DownloadDataBlock.o: dsmcc/carousel/data/DownloadDataBlock.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DownloadDataBlock.o -MD -MP -MF $(DEPDIR)/DownloadDataBlock.Tpo -c -o DownloadDataBlock.o `test -f 'dsmcc/carousel/data/DownloadDataBlock.cpp' || echo '$(srcdir)/'`dsmcc/carousel/data/DownloadDataBlock.cpp
	mv -f $(DEPDIR)/DownloadDataBlock.Tpo $(DEPDIR)/DownloadDataBlock.Po
#	source='dsmcc/carousel/data/DownloadDataBlock.cpp' object='DownloadDataBlock.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DownloadDataBlock.o `test -f 'dsmcc/carousel/data/DownloadDataBlock.cpp' || echo '$(srcdir)/'`dsmcc/carousel/data/DownloadDataBlock.cpp

DownloadDataBlock.obj: dsmcc/carousel/data/DownloadDataBlock.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DownloadDataBlock.obj -MD -MP -MF $(DEPDIR)/DownloadDataBlock.Tpo -c -o DownloadDataBlock.obj `if test -f 'dsmcc/carousel/data/DownloadDataBlock.cpp'; then $(CYGPATH_W) 'dsmcc/carousel/data/DownloadDataBlock.cpp'; else $(CYGPATH_W) '$(srcdir)/dsmcc/carousel/data/DownloadDataBlock.cpp'; fi`
	mv -f $(DEPDIR)/DownloadDataBlock.Tpo $(DEPDIR)/DownloadDataBlock.Po
#	source='dsmcc/carousel/data/DownloadDataBlock.cpp' object='DownloadDataBlock.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DownloadDataBlock.obj `if test -f 'dsmcc/carousel/data/DownloadDataBlock.cpp'; then $(CYGPATH_W) 'dsmcc/carousel/data/DownloadDataBlock.cpp'; else $(CYGPATH_W) '$(srcdir)/dsmcc/carousel/data/DownloadDataBlock.cpp'; fi`

DownloadInfoIndication.o: dsmcc/carousel/data/DownloadInfoIndication.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DownloadInfoIndication.o -MD -MP -MF $(DEPDIR)/DownloadInfoIndication.Tpo -c -o DownloadInfoIndication.o `test -f 'dsmcc/carousel/data/DownloadInfoIndication.cpp' || echo '$(srcdir)/'`dsmcc/carousel/data/DownloadInfoIndication.cpp
	mv -f $(DEPDIR)/DownloadInfoIndication.Tpo $(DEPDIR)/DownloadInfoIndication.Po
#	source='dsmcc/carousel/data/DownloadInfoIndication.cpp' object='DownloadInfoIndication.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DownloadInfoIndication.o `test -f 'dsmcc/carousel/data/DownloadInfoIndication.cpp' || echo '$(srcdir)/'`dsmcc/carousel/data/DownloadInfoIndication.cpp

DownloadInfoIndication.obj: dsmcc/carousel/data/DownloadInfoIndication.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DownloadInfoIndication.obj -MD -MP -MF $(DEPDIR)/DownloadInfoIndication.Tpo -c -o DownloadInfoIndication.obj `if test -f 'dsmcc/carousel/data/DownloadInfoIndication.cpp'; then $(CYGPATH_W) 'dsmcc/carousel/data/DownloadInfoIndication.cpp'; else $(CYGPATH_W) '$(srcdir)/dsmcc/carousel/data/DownloadInfoIndication.cpp'; fi`
	mv -f $(DEPDIR)/DownloadInfoIndication.Tpo $(DEPDIR)/DownloadInfoIndication.Po
#	source='dsmcc/carousel/data/DownloadInfoIndication.cpp' object='DownloadInfoIndication.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DownloadInfoIndication.obj `if test -f 'dsmcc/carousel/data/DownloadInfoIndication.cpp'; then $(CYGPATH_W) 'dsmcc/carousel/data/DownloadInfoIndication.cpp'; else $(CYGPATH_W) '$(srcdir)/dsmcc/carousel/data/DownloadInfoIndication.cpp'; fi`

DownloadServerInitiate.o: dsmcc/carousel/data/DownloadServerInitiate.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DownloadServerInitiate.o -MD -MP -MF $(DEPDIR)/DownloadServerInitiate.Tpo -c -o DownloadServerInitiate.o `test -f 'dsmcc/carousel/data/DownloadServerInitiate.cpp' || echo '$(srcdir)/'`dsmcc/carousel/data/DownloadServerInitiate.cpp
	mv -f $(DEPDIR)/DownloadServerInitiate.Tpo $(DEPDIR)/DownloadServerInitiate.Po
#	source='dsmcc/carousel/data/DownloadServerInitiate.cpp' object='DownloadServerInitiate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DownloadServerInitiate.o `test -f 'dsmcc/carousel/data/DownloadServerInitiate.cpp' || echo '$(srcdir)/'`dsmcc/carousel/data/DownloadServerInitiate.cpp

DownloadServerInitiate.obj: dsmcc/carousel/data/DownloadServerInitiate.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DownloadServerInitiate.obj -MD -MP -MF $(DEPDIR)/DownloadServerInitiate.Tpo -c -o DownloadServerInitiate.obj `if test -f 'dsmcc/carousel/data/DownloadServerInitiate.cpp'; then $(CYGPATH_W) 'dsmcc/carousel/data/DownloadServerInitiate.cpp'; else $(CYGPATH_W) '$(srcdir)/dsmcc/carousel/data/DownloadServerInitiate.cpp'; fi`
	mv -f $(DEPDIR)/DownloadServerInitiate.Tpo $(DEPDIR)/DownloadServerInitiate.Po
#	source='dsmcc/carousel/data/DownloadServerInitiate.cpp' object='DownloadServerInitiate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DownloadServerInitiate.obj `if test -f 'dsmcc/carousel/data/DownloadServerInitiate.cpp'; then $(CYGPATH_W) 'dsmcc/carousel/data/DownloadServerInitiate.cpp'; else $(CYGPATH_W) '$(srcdir)/dsmcc/carousel/data/DownloadServerInitiate.cpp'; fi`

DsmccMessageHeader.o: dsmcc/carousel/data/DsmccMessageHeader.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DsmccMessageHeader.o -MD -MP -MF $(DEPDIR)/DsmccMessageHeader.Tpo -c -o DsmccMessageHeader.o `test -f 'dsmcc/carousel/data/DsmccMessageHeader.cpp' || echo '$(srcdir)/'`dsmcc/carousel/data/DsmccMessageHeader.cpp
	mv -f $(DEPDIR)/DsmccMessageHeader.Tpo $(DEPDIR)/DsmccMessageHeader.Po
#	source='dsmcc/carousel/data/DsmccMessageHeader.cpp' object='DsmccMessageHeader.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DsmccMessageHeader.o `test -f 'dsmcc/carousel/data/DsmccMessageHeader.cpp' || echo '$(srcdir)/'`dsmcc/carousel/data/DsmccMessageHeader.cpp

DsmccMessageHeader.obj: dsmcc/carousel/data/DsmccMessageHeader.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DsmccMessageHeader.obj -MD -MP -MF $(DEPDIR)/DsmccMessageHeader.Tpo -c -o DsmccMessageHeader.obj `if test -f 'dsmcc/carousel/data/DsmccMessageHeader.cpp'; then $(CYGPATH_W) 'dsmcc/carousel/data/DsmccMessageHeader.cpp'; else $(CYGPATH_W) '$(srcdir)/dsmcc/carousel/data/DsmccMessageHeader.cpp'; fi`
	mv -f $(DEPDIR)/DsmccMessageHeader.Tpo $(DEPDIR)/DsmccMessageHeader.Po
#	source='dsmcc/carousel/data/DsmccMessageHeader.cpp' object='DsmccMessageHeader.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DsmccMessageHeader.obj `if test -f 'dsmcc/carousel/data/DsmccMessageHeader.cpp'; then $(CYGPATH_W) 'dsmcc/carousel/data/DsmccMessageHeader.cpp'; else $(CYGPATH_W) '$(srcdir)/dsmcc/carousel/data/DsmccMessageHeader.cpp'; fi`

MessageProcessor.o: dsmcc/carousel/data/MessageProcessor.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MessageProcessor.o -MD -MP -MF $(DEPDIR)/MessageProcessor.Tpo -c -o MessageProcessor.o `test -f 'dsmcc/carousel/data/MessageProcessor.cpp' || echo '$(srcdir)/'`dsmcc/carousel/data/MessageProcessor.cpp
	mv -f $(DEPDIR)/MessageProcessor.Tpo $(DEPDIR)/MessageProcessor.Po
#	source='dsmcc/carousel/data/MessageProcessor.cpp' object='MessageProcessor.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MessageProcessor.o `test -f 'dsmcc/carousel/data/MessageProcessor.cpp' || echo '$(srcdir)/'`dsmcc/carousel/data/MessageProcessor.cpp

MessageProcessor.obj: dsmcc/carousel/data/MessageProcessor.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MessageProcessor.obj -MD -MP -MF $(DEPDIR)/MessageProcessor.Tpo -c -o MessageProcessor.obj `if test -f 'dsmcc/carousel/data/MessageProcessor.cpp'; then $(CYGPATH_W) 'dsmcc/carousel/data/MessageProcessor.cpp'; else $(CYGPATH_W) '$(srcdir)/dsmcc/carousel/data/MessageProcessor.cpp'; fi`
	mv -f $(DEPDIR)/MessageProcessor.Tpo $(DEPDIR)/MessageProcessor.Po
#	source='dsmcc/carousel/data/MessageProcessor.cpp' object='MessageProcessor.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MessageProcessor.obj `if test -f 'dsmcc/carousel/data/MessageProcessor.cpp'; then $(CYGPATH_W) 'dsmcc/carousel/data/MessageProcessor.cpp'; else $(CYGPATH_W) '$(srcdir)/dsmcc/carousel/data/MessageProcessor.cpp'; fi`

Module.o: dsmcc/carousel/data/Module.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Module.o -MD -MP -MF $(DEPDIR)/Module.Tpo -c -o Module.o `test -f 'dsmcc/carousel/data/Module.cpp' || echo '$(srcdir)/'`dsmcc/carousel/data/Module.cpp
	mv -f $(DEPDIR)/Module.Tpo $(DEPDIR)/Module.Po
#	source='dsmcc/carousel/data/Module.cpp' object='Module.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Module.o `test -f 'dsmcc/carousel/data/Module.cpp' || echo '$(srcdir)/'`dsmcc/carousel/data/Module.cpp

Module.obj: dsmcc/carousel/data/Module.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Module.obj -MD -MP -MF $(DEPDIR)/Module.Tpo -c -o Module.obj `if test -f 'dsmcc/carousel/data/Module.cpp'; then $(CYGPATH_W) 'dsmcc/carousel/data/Module.cpp'; else $(CYGPATH_W) '$(srcdir)/dsmcc/carousel/data/Module.cpp'; fi`
	mv -f $(DEPDIR)/Module.Tpo $(DEPDIR)/Module.Po
#	source='dsmcc/carousel/data/Module.cpp' object='Module.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Module.obj `if test -f 'dsmcc/carousel/data/Module.cpp'; then $(CYGPATH_W) 'dsmcc/carousel/data/Module.cpp'; else $(CYGPATH_W) '$(srcdir)/dsmcc/carousel/data/Module.cpp'; fi`

Object.o: dsmcc/carousel/object/Object.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Object.o -MD -MP -MF $(DEPDIR)/Object.Tpo -c -o Object.o `test -f 'dsmcc/carousel/object/Object.cpp' || echo '$(srcdir)/'`dsmcc/carousel/object/Object.cpp
	mv -f $(DEPDIR)/Object.Tpo $(DEPDIR)/Object.Po
#	source='dsmcc/carousel/object/Object.cpp' object='Object.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Object.o `test -f 'dsmcc/carousel/object/Object.cpp' || echo '$(srcdir)/'`dsmcc/carousel/object/Object.cpp

Object.obj: dsmcc/carousel/object/Object.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Object.obj -MD -MP -MF $(DEPDIR)/Object.Tpo -c -o Object.obj `if test -f 'dsmcc/carousel/object/Object.cpp'; then $(CYGPATH_W) 'dsmcc/carousel/object/Object.cpp'; else $(CYGPATH_W) '$(srcdir)/dsmcc/carousel/object/Object.cpp'; fi`
	mv -f $(DEPDIR)/Object.Tpo $(DEPDIR)/Object.Po
#	source='dsmcc/carousel/object/Object.cpp' object='Object.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Object.obj `if test -f 'dsmcc/carousel/object/Object.cpp'; then $(CYGPATH_W) 'dsmcc/carousel/object/Object.cpp'; else $(CYGPATH_W) '$(srcdir)/dsmcc/carousel/object/Object.cpp'; fi`

ObjectProcessor.o: dsmcc/carousel/object/ObjectProcessor.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ObjectProcessor.o -MD -MP -MF $(DEPDIR)/ObjectProcessor.Tpo -c -o ObjectProcessor.o `test -f 'dsmcc/carousel/object/ObjectProcessor.cpp' || echo '$(srcdir)/'`dsmcc/carousel/object/ObjectProcessor.cpp
	mv -f $(DEPDIR)/ObjectProcessor.Tpo $(DEPDIR)/ObjectProcessor.Po
#	source='dsmcc/carousel/object/ObjectProcessor.cpp' object='ObjectProcessor.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ObjectProcessor.o `test -f 'dsmcc/carousel/object/ObjectProcessor.cpp' || echo '$(srcdir)/'`dsmcc/carousel/object/ObjectProcessor.cpp

ObjectProcessor.obj: dsmcc/carousel/object/ObjectProcessor.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ObjectProcessor.obj -MD -MP -MF $(DEPDIR)/ObjectProcessor.Tpo -c -o ObjectProcessor.obj `if test -f 'dsmcc/carousel/object/ObjectProcessor.cpp'; then $(CYGPATH_W) 'dsmcc/carousel/object/ObjectProcessor.cpp'; else $(CYGPATH_W) '$(srcdir)/dsmcc/carousel/object/ObjectProcessor.cpp'; fi`
	mv -f $(DEPDIR)/ObjectProcessor.Tpo $(DEPDIR)/ObjectProcessor.Po
#	source='dsmcc/carousel/object/ObjectProcessor.cpp' object='ObjectProcessor.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ObjectProcessor.obj `if test -f 'dsmcc/carousel/object/ObjectProcessor.cpp'; then $(CYGPATH_W) 'dsmcc/carousel/object/ObjectProcessor.cpp'; else $(CYGPATH_W) '$(srcdir)/dsmcc/carousel/object/ObjectProcessor.cpp'; fi`

Crc.o: dsmcc/npt/Crc.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Crc.o -MD -MP -MF $(DEPDIR)/Crc.Tpo -c -o Crc.o `test -f 'dsmcc/npt/Crc.cpp' || echo '$(srcdir)/'`dsmcc/npt/Crc.cpp
	mv -f $(DEPDIR)/Crc.Tpo $(DEPDIR)/Crc.Po
#	source='dsmcc/npt/Crc.cpp' object='Crc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Crc.o `test -f 'dsmcc/npt/Crc.cpp' || echo '$(srcdir)/'`dsmcc/npt/Crc.cpp

Crc.obj: dsmcc/npt/Crc.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Crc.obj -MD -MP -MF $(DEPDIR)/Crc.Tpo -c -o Crc.obj `if test -f 'dsmcc/npt/Crc.cpp'; then $(CYGPATH_W) 'dsmcc/npt/Crc.cpp'; else $(CYGPATH_W) '$(srcdir)/dsmcc/npt/Crc.cpp'; fi`
	mv -f $(DEPDIR)/Crc.Tpo $(DEPDIR)/Crc.Po
#	source='dsmcc/npt/Crc.cpp' object='Crc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Crc.obj `if test -f 'dsmcc/npt/Crc.cpp'; then $(CYGPATH_W) 'dsmcc/npt/Crc.cpp'; else $(CYGPATH_W) '$(srcdir)/dsmcc/npt/Crc.cpp'; fi`

Descriptor.o: dsmcc/npt/Descriptor.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Descriptor.o -MD -MP -MF $(DEPDIR)/Descriptor.Tpo -c -o Descriptor.o `test -f 'dsmcc/npt/Descriptor.cpp' || echo '$(srcdir)/'`dsmcc/npt/Descriptor.cpp
	mv -f $(DEPDIR)/Descriptor.Tpo $(DEPDIR)/Descriptor.Po
#	source='dsmcc/npt/Descriptor.cpp' object='Descriptor.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Descriptor.o `test -f 'dsmcc/npt/Descriptor.cpp' || echo '$(srcdir)/'`dsmcc/npt/Descriptor.cpp

Descriptor.obj: dsmcc/npt/Descriptor.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Descriptor.obj -MD -MP -MF $(DEPDIR)/Descriptor.Tpo -c -o Descriptor.obj `if test -f 'dsmcc/npt/Descriptor.cpp'; then $(CYGPATH_W) 'dsmcc/npt/Descriptor.cpp'; else $(CYGPATH_W) '$(srcdir)/dsmcc/npt/Descriptor.cpp'; fi`
	mv -f $(DEPDIR)/Descriptor.Tpo $(DEPDIR)/Descriptor.Po
#	source='dsmcc/npt/Descriptor.cpp' object='Descriptor.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Descriptor.obj `if test -f 'dsmcc/npt/Descriptor.cpp'; then $(CYGPATH_W) 'dsmcc/npt/Descriptor.cpp'; else $(CYGPATH_W) '$(srcdir)/dsmcc/npt/Descriptor.cpp'; fi`

DSMCCSectionPayload.o: dsmcc/npt/DSMCCSectionPayload.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DSMCCSectionPayload.o -MD -MP -MF $(DEPDIR)/DSMCCSectionPayload.Tpo -c -o DSMCCSectionPayload.o `test -f 'dsmcc/npt/DSMCCSectionPayload.cpp' || echo '$(srcdir)/'`dsmcc/npt/DSMCCSectionPayload.cpp
	mv -f $(DEPDIR)/DSMCCSectionPayload.Tpo $(DEPDIR)/DSMCCSectionPayload.Po
#	source='dsmcc/npt/DSMCCSectionPayload.cpp' object='DSMCCSectionPayload.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DSMCCSectionPayload.o `test -f 'dsmcc/npt/DSMCCSectionPayload.cpp' || echo '$(srcdir)/'`dsmcc/npt/DSMCCSectionPayload.cpp

DSMCCSectionPayload.obj: dsmcc/npt/DSMCCSectionPayload.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DSMCCSectionPayload.obj -MD -MP -MF $(DEPDIR)/DSMCCSectionPayload.Tpo -c -o DSMCCSectionPayload.obj `if test -f 'dsmcc/npt/DSMCCSectionPayload.cpp'; then $(CYGPATH_W) 'dsmcc/npt/DSMCCSectionPayload.cpp'; else $(CYGPATH_W) '$(srcdir)/dsmcc/npt/DSMCCSectionPayload.cpp'; fi`
	mv -f $(DEPDIR)/DSMCCSectionPayload.Tpo $(DEPDIR)/DSMCCSectionPayload.Po
#	source='dsmcc/npt/DSMCCSectionPayload.cpp' object='DSMCCSectionPayload.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DSMCCSectionPayload.obj `if test -f 'dsmcc/npt/DSMCCSectionPayload.cpp'; then $(CYGPATH_W) 'dsmcc/npt/DSMCCSectionPayload.cpp'; else $(CYGPATH_W) '$(srcdir)/dsmcc/npt/DSMCCSectionPayload.cpp'; fi`

NPTProcessor.o: dsmcc/npt/NPTProcessor.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT NPTProcessor.o -MD -MP -MF $(DEPDIR)/NPTProcessor.Tpo -c -o NPTProcessor.o `test -f 'dsmcc/npt/NPTProcessor.cpp' || echo '$(srcdir)/'`dsmcc/npt/NPTProcessor.cpp
	mv -f $(DEPDIR)/NPTProcessor.Tpo $(DEPDIR)/NPTProcessor.Po
#	source='dsmcc/npt/NPTProcessor.cpp' object='NPTProcessor.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o NPTProcessor.o `test -f 'dsmcc/npt/NPTProcessor.cpp' || echo '$(srcdir)/'`dsmcc/npt/NPTProcessor.cpp

NPTProcessor.obj: dsmcc/npt/NPTProcessor.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT NPTProcessor.obj -MD -MP -MF $(DEPDIR)/NPTProcessor.Tpo -c -o NPTProcessor.obj `if test -f 'dsmcc/npt/NPTProcessor.cpp'; then $(CYGPATH_W) 'dsmcc/npt/NPTProcessor.cpp'; else $(CYGPATH_W) '$(srcdir)/dsmcc/npt/NPTProcessor.cpp'; fi`
	mv -f $(DEPDIR)/NPTProcessor.Tpo $(DEPDIR)/NPTProcessor.Po
#	source='dsmcc/npt/NPTProcessor.cpp' object='NPTProcessor.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o NPTProcessor.obj `if test -f 'dsmcc/npt/NPTProcessor.cpp'; then $(CYGPATH_W) 'dsmcc/npt/NPTProcessor.cpp'; else $(CYGPATH_W) '$(srcdir)/dsmcc/npt/NPTProcessor.cpp'; fi`

NPTReference.o: dsmcc/npt/NPTReference.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT NPTReference.o -MD -MP -MF $(DEPDIR)/NPTReference.Tpo -c -o NPTReference.o `test -f 'dsmcc/npt/NPTReference.cpp' || echo '$(srcdir)/'`dsmcc/npt/NPTReference.cpp
	mv -f $(DEPDIR)/NPTReference.Tpo $(DEPDIR)/NPTReference.Po
#	source='dsmcc/npt/NPTReference.cpp' object='NPTReference.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o NPTReference.o `test -f 'dsmcc/npt/NPTReference.cpp' || echo '$(srcdir)/'`dsmcc/npt/NPTReference.cpp

NPTReference.obj: dsmcc/npt/NPTReference.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT NPTReference.obj -MD -MP -MF $(DEPDIR)/NPTReference.Tpo -c -o NPTReference.obj `if test -f 'dsmcc/npt/NPTReference.cpp'; then $(CYGPATH_W) 'dsmcc/npt/NPTReference.cpp'; else $(CYGPATH_W) '$(srcdir)/dsmcc/npt/NPTReference.cpp'; fi`
	mv -f $(DEPDIR)/NPTReference.Tpo $(DEPDIR)/NPTReference.Po
#	source='dsmcc/npt/NPTReference.cpp' object='NPTReference.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o NPTReference.obj `if test -f 'dsmcc/npt/NPTReference.cpp'; then $(CYGPATH_W) 'dsmcc/npt/NPTReference.cpp'; else $(CYGPATH_W) '$(srcdir)/dsmcc/npt/NPTReference.cpp'; fi`

Stc.o: dsmcc/npt/Stc.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Stc.o -MD -MP -MF $(DEPDIR)/Stc.Tpo -c -o Stc.o `test -f 'dsmcc/npt/Stc.cpp' || echo '$(srcdir)/'`dsmcc/npt/Stc.cpp
	mv -f $(DEPDIR)/Stc.Tpo $(DEPDIR)/Stc.Po
#	source='dsmcc/npt/Stc.cpp' object='Stc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Stc.o `test -f 'dsmcc/npt/Stc.cpp' || echo '$(srcdir)/'`dsmcc/npt/Stc.cpp

Stc.obj: dsmcc/npt/Stc.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Stc.obj -MD -MP -MF $(DEPDIR)/Stc.Tpo -c -o Stc.obj `if test -f 'dsmcc/npt/Stc.cpp'; then $(CYGPATH_W) 'dsmcc/npt/Stc.cpp'; else $(CYGPATH_W) '$(srcdir)/dsmcc/npt/Stc.cpp'; fi`
	mv -f $(DEPDIR)/Stc.Tpo $(DEPDIR)/Stc.Po
#	source='dsmcc/npt/Stc.cpp' object='Stc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Stc.obj `if test -f 'dsmcc/npt/Stc.cpp'; then $(CYGPATH_W) 'dsmcc/npt/Stc.cpp'; else $(CYGPATH_W) '$(srcdir)/dsmcc/npt/Stc.cpp'; fi`

StreamMode.o: dsmcc/npt/StreamMode.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT StreamMode.o -MD -MP -MF $(DEPDIR)/StreamMode.Tpo -c -o StreamMode.o `test -f 'dsmcc/npt/StreamMode.cpp' || echo '$(srcdir)/'`dsmcc/npt/StreamMode.cpp
	mv -f $(DEPDIR)/StreamMode.Tpo $(DEPDIR)/StreamMode.Po
#	source='dsmcc/npt/StreamMode.cpp' object='StreamMode.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o StreamMode.o `test -f 'dsmcc/npt/StreamMode.cpp' || echo '$(srcdir)/'`dsmcc/npt/StreamMode.cpp

StreamMode.obj: dsmcc/npt/StreamMode.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT StreamMode.obj -MD -MP -MF $(DEPDIR)/StreamMode.Tpo -c -o StreamMode.obj `if test -f 'dsmcc/npt/StreamMode.cpp'; then $(CYGPATH_W) 'dsmcc/npt/StreamMode.cpp'; else $(CYGPATH_W) '$(srcdir)/dsmcc/npt/StreamMode.cpp'; fi`
	mv -f $(DEPDIR)/StreamMode.Tpo $(DEPDIR)/StreamMode.Po
#	source='dsmcc/npt/StreamMode.cpp' object='StreamMode.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o StreamMode.obj `if test -f 'dsmcc/npt/StreamMode.cpp'; then $(CYGPATH_W) 'dsmcc/npt/StreamMode.cpp'; else $(CYGPATH_W) '$(srcdir)/dsmcc/npt/StreamMode.cpp'; fi`

TimeBaseClock.o: dsmcc/npt/TimeBaseClock.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TimeBaseClock.o -MD -MP -MF $(DEPDIR)/TimeBaseClock.Tpo -c -o TimeBaseClock.o `test -f 'dsmcc/npt/TimeBaseClock.cpp' || echo '$(srcdir)/'`dsmcc/npt/TimeBaseClock.cpp
	mv -f $(DEPDIR)/TimeBaseClock.Tpo $(DEPDIR)/TimeBaseClock.Po
#	source='dsmcc/npt/TimeBaseClock.cpp' object='TimeBaseClock.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TimeBaseClock.o `test -f 'dsmcc/npt/TimeBaseClock.cpp' || echo '$(srcdir)/'`dsmcc/npt/TimeBaseClock.cpp

TimeBaseClock.obj: dsmcc/npt/TimeBaseClock.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TimeBaseClock.obj -MD -MP -MF $(DEPDIR)/TimeBaseClock.Tpo -c -o TimeBaseClock.obj `if test -f 'dsmcc/npt/TimeBaseClock.cpp'; then $(CYGPATH_W) 'dsmcc/npt/TimeBaseClock.cpp'; else $(CYGPATH_W) '$(srcdir)/dsmcc/npt/TimeBaseClock.cpp'; fi`
	mv -f $(DEPDIR)/TimeBaseClock.Tpo $(DEPDIR)/TimeBaseClock.Po
#	source='dsmcc/npt/TimeBaseClock.cpp' object='TimeBaseClock.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TimeBaseClock.obj `if test -f 'dsmcc/npt/TimeBaseClock.cpp'; then $(CYGPATH_W) 'dsmcc/npt/TimeBaseClock.cpp'; else $(CYGPATH_W) '$(srcdir)/dsmcc/npt/TimeBaseClock.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(localLibdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-localLibPROGRAMS \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-localLibPROGRAMS

install-dvi: install-dvi-am

install-exec-am:

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-localLibPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-localLibPROGRAMS ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am \
	install-localLibPROGRAMS install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-localLibPROGRAMS

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
