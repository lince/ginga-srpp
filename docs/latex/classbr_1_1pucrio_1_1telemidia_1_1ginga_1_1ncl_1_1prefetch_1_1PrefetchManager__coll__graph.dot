digraph G
{
  edge [fontname="FreeSans.ttf",fontsize=10,labelfontname="FreeSans.ttf",labelfontsize=10];
  node [fontname="FreeSans.ttf",fontsize=10,shape=record];
  Node1 [label="{PrefetchManager\n|- localToRemoteUris\l- urisToLocalRoots\l- scheduledRemoteUris\l- scheduledLocalUris\l- icm\l- prefetchRoot\l- synch\l- kbytes\l- filesDown\l- filesSched\l- _instance\l|+ release()\l+ releaseContents()\l+ createDocumentPrefetcher()\l+ createSourcePrefetcher()\l+ hasIChannel()\l+ hasRemoteLocation()\l+ getRemoteLocation()\l+ getLocalRoot()\l+ setSynchPrefetch()\l+ getScheduledContent()\l+ getScheduledContents()\l+ getInstance()\l- PrefetchManager()\l- ~PrefetchManager()\l- createDirectory()\l- getContent()\l- scheduleContent()\l- receiveCode()\l- receiveDataStream()\l- receiveDataPipe()\l- downloadCompleted()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node2 -> Node1 [dir=back,color="midnightblue",fontsize=10,style="solid",arrowtail="empty"];
  Node2 [label="{IPrefetchManager\n||+ ~IPrefetchManager()\l+ release()\l+ releaseContents()\l+ createDocumentPrefetcher()\l+ createSourcePrefetcher()\l+ hasIChannel()\l+ hasRemoteLocation()\l+ getRemoteLocation()\l+ getLocalRoot()\l+ setSynchPrefetch()\l+ getScheduledContent()\l+ getScheduledContents()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classbr_1_1pucrio_1_1telemidia_1_1ginga_1_1ncl_1_1prefetch_1_1IPrefetchManager.html"];
  Node3 -> Node1 [dir=back,color="midnightblue",fontsize=10,style="solid",arrowtail="empty"];
  Node3 [label="{IInteractiveChannelListener\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node4 -> Node1 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="localToRemoteUris\nurisToLocalRoots",arrowtail="open"];
  Node4 [label="{map\< string, string \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node5 -> Node4 [dir=back,color="orange",fontsize=10,style="dashed",label="\< string, string \>"];
  Node5 [label="{map\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip="STL class."];
  Node6 -> Node1 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="scheduledRemoteUris\nscheduledLocalUris",arrowtail="open"];
  Node6 [label="{set\< string \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node7 -> Node6 [dir=back,color="orange",fontsize=10,style="dashed",label="\< string \>"];
  Node7 [label="{set\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip="STL class."];
  Node8 -> Node1 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="icm",arrowtail="open"];
  Node8 [label="{IInteractiveChannelManager *\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node2 -> Node1 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="_instance",arrowtail="open"];
  Node9 -> Node1 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="kbytes\nfilesSched\nfilesDown",arrowtail="open"];
  Node9 [label="{int\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node10 -> Node1 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="synch",arrowtail="open"];
  Node10 [label="{bool\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node11 -> Node1 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="prefetchRoot",arrowtail="open"];
  Node11 [label="{string\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip="STL class."];
  Node12 -> Node11 [dir=back,color="midnightblue",fontsize=10,style="solid",arrowtail="empty"];
  Node12 [label="{basic_string\< char \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node13 -> Node12 [dir=back,color="orange",fontsize=10,style="dashed",label="\< char \>"];
  Node13 [label="{basic_string\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip="STL class."];
}
