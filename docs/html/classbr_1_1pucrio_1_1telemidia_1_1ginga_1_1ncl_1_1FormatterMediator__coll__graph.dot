digraph G
{
  edge [fontname="FreeSans.ttf",fontsize=10,labelfontname="FreeSans.ttf",labelfontsize=10];
  node [fontname="FreeSans.ttf",fontsize=10,shape=record];
  Node1 [label="{FormatterMediator\n|- data\l- currentFile\l- currentDocument\l- documentEvents\l- documentEntryEvents\l- scheduler\l- ruleAdapter\l- compiler\l- playerManager\l- timeBaseProvider\l- compileErrors\l- deviceLayout\l- multiDevice\l- isEmbedded\l- privateBaseManager\l- pm\l|+ FormatterMediator()\l+ ~FormatterMediator()\l+ printData()\l+ setStandByState()\l+ setTimeBaseProvider()\l+ setBackgroundImage()\l+ setParentLayout()\l+ getScreenShot()\l+ getCompileErrors()\l+ setCurrentDocument()\l+ setDepthLevel()\l+ getDepthLevel()\l+ nclEdit()\l+ editingCommand()\l+ setNotifyContentUpdate()\l+ addListener()\l+ removeListener()\l+ notifyListeners()\l+ setSurface()\l+ getSurface()\l+ flip()\l+ getMediaTime()\l+ setMediaTime()\l+ setKeyHandler()\l+ setScope()\l+ play()\l+ stop()\l+ abort()\l+ pause()\l+ resume()\l+ getPropertyValue()\l+ setPropertyValue()\l+ setReferenceTimePlayer()\l+ addTimeReferPlayer()\l+ removeTimeReferPlayer()\l+ notifyReferPlayers()\l+ timebaseObjectTransitionCallback()\l+ setTimeBasePlayer()\l+ hasPresented()\l+ setPresented()\l+ isVisible()\l+ setVisible()\l+ immediatelyStart()\l+ setImmediatelyStart()\l+ forceNaturalEnd()\l+ isForcedNaturalEnd()\l+ setOutWindow()\l+ getSelectedPlayer()\l+ setPlayerMap()\l+ getPlayerMap()\l+ getPlayer()\l+ select()\l+ setCurrentScope()\l+ getActiveUris()\l+ getDepUris()\l+ timeShift()\l+ getPlayerState()\l+ release()\l- addDocument()\l- removeDocument()\l- getDocumentContext()\l- processDocument()\l- getDocumentEntryEvent()\l- compileDocument()\l- prepareDocument()\l- solveRemoteDescriptorsUris()\l- solveRemoteNodesUris()\l- solveRemoteNclDeps()\l- solveRemoteLuaDeps()\l- solveRemoteSourceUri()\l- startDocument()\l- stopDocument()\l- pauseDocument()\l- resumeDocument()\l- presentationCompleted()\l- addRegion()\l- removeRegion()\l- addRegionBase()\l- removeRegionBase()\l- addRule()\l- removeRule()\l- addRuleBase()\l- removeRuleBase()\l- addTransition()\l- removeTransition()\l- addTransitionBase()\l- removeTransitionBase()\l- addConnector()\l- removeConnector()\l- addConnectorBase()\l- removeConnectorBase()\l- addDescriptor()\l- removeDescriptor()\l- addDescriptorBase()\l- removeDescriptorBase()\l- addImportBase()\l- removeImportBase()\l- addImportedDocumentBase()\l- removeImportedDocumentBase()\l- addImportNCL()\l- removeImportNCL()\l- processInsertedReferNode()\l- processInsertedComposition()\l- addNode()\l- removeNode()\l- addInterface()\l- removeInterfaceMappings()\l- removeInterfaceLinks()\l- removeInterface()\l- removeInterface()\l- addLink()\l- removeLink()\l- removeLink()\l- setPropertyValue()\l- pushEPGEventToEPGFactory()\l- getDepUrisFromNodes()\l- getDepUriFromNode()\l- getBaseUri()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node2 -> Node1 [dir=back,color="midnightblue",fontsize=10,style="solid",arrowtail="empty",fontname="FreeSans.ttf"];
  Node2 [label="{INCLPlayer\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node3 -> Node1 [dir=back,color="midnightblue",fontsize=10,style="solid",arrowtail="empty",fontname="FreeSans.ttf"];
  Node3 [label="{Player\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node4 -> Node1 [dir=back,color="midnightblue",fontsize=10,style="solid",arrowtail="empty",fontname="FreeSans.ttf"];
  Node4 [label="{INclEditListener\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node5 -> Node1 [dir=back,color="midnightblue",fontsize=10,style="solid",arrowtail="empty",fontname="FreeSans.ttf"];
  Node5 [label="{IFormatterSchedulerListener\n||+ ~IFormatterSchedulerListener()\l+ presentationCompleted()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classbr_1_1pucrio_1_1telemidia_1_1ginga_1_1ncl_1_1IFormatterSchedulerListener.html"];
  Node6 -> Node1 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="playerManager",arrowtail="open",fontname="FreeSans.ttf"];
  Node6 [label="{PlayerAdapterManager *\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node7 -> Node1 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="compileErrors",arrowtail="open",fontname="FreeSans.ttf"];
  Node7 [label="{vector\< string \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node8 -> Node7 [dir=back,color="orange",fontsize=10,style="dashed",label="\< string \>",fontname="FreeSans.ttf"];
  Node8 [label="{vector\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip="STL class."];
  Node9 -> Node1 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="documentEntryEvents",arrowtail="open",fontname="FreeSans.ttf"];
  Node9 [label="{map\< string, vector\< FormatterEvent * \> * \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node10 -> Node9 [dir=back,color="orange",fontsize=10,style="dashed",label="\< string, vector\< FormatterEvent * \> * \>",fontname="FreeSans.ttf"];
  Node10 [label="{map\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip="STL class."];
  Node11 -> Node1 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="isEmbedded",arrowtail="open",fontname="FreeSans.ttf"];
  Node11 [label="{bool\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node12 -> Node1 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="ruleAdapter",arrowtail="open",fontname="FreeSans.ttf"];
  Node12 [label="{RuleAdapter *\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node13 -> Node1 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="pm",arrowtail="open",fontname="FreeSans.ttf"];
  Node13 [label="{static IPrefetchManager *\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node14 -> Node1 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="currentFile",arrowtail="open",fontname="FreeSans.ttf"];
  Node14 [label="{string\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip="STL class."];
  Node15 -> Node14 [dir=back,color="midnightblue",fontsize=10,style="solid",arrowtail="empty",fontname="FreeSans.ttf"];
  Node15 [label="{basic_string\< char \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node16 -> Node15 [dir=back,color="orange",fontsize=10,style="dashed",label="\< char \>",fontname="FreeSans.ttf"];
  Node16 [label="{basic_string\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip="STL class."];
  Node17 -> Node1 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="deviceLayout",arrowtail="open",fontname="FreeSans.ttf"];
  Node17 [label="{IDeviceLayout *\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node18 -> Node1 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="scheduler",arrowtail="open",fontname="FreeSans.ttf"];
  Node18 [label="{FormatterScheduler\n|- ruleAdapter\l- playerManager\l- layoutManager\l- focusManager\l- compiler\l- schedulerListeners\l- documentEvents\l- documentStatus\l- typeSet\l|+ FormatterScheduler()\l+ ~FormatterScheduler()\l+ stopListening()\l+ setKeyHandler()\l+ setStandByState()\l+ getFocusManager()\l+ getFormatterLayout()\l+ runAction()\l+ startEvent()\l+ stopEvent()\l+ pauseEvent()\l+ resumeEvent()\l+ startDocument()\l+ stopDocument()\l+ pauseDocument()\l+ resumeDocument()\l+ stopAllDocuments()\l+ pauseAllDocuments()\l+ resumeAllDocuments()\l+ eventStateChanged()\l+ getPriorityType()\l+ addSchedulerListener()\l+ removeSchedulerListener()\l- isDocumentRunning()\l- setTimeBaseObject()\l- runAction()\l- runActionOverProperty()\l- runActionOverApplicationObject()\l- runActionOverComposition()\l- runActionOverSwitch()\l- runSwitchEvent()\l- solveImplicitRefAssessment()\l- initializeDefaultSettings()\l- initializeDocumentSettings()\l- removeDocument()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classbr_1_1pucrio_1_1telemidia_1_1ginga_1_1ncl_1_1FormatterScheduler.html"];
  Node19 -> Node18 [dir=back,color="midnightblue",fontsize=10,style="solid",arrowtail="empty",fontname="FreeSans.ttf"];
  Node19 [label="{LinkActionListener\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node20 -> Node18 [dir=back,color="midnightblue",fontsize=10,style="solid",arrowtail="empty",fontname="FreeSans.ttf"];
  Node20 [label="{IEventListener\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node6 -> Node18 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="playerManager",arrowtail="open",fontname="FreeSans.ttf"];
  Node21 -> Node18 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="schedulerListeners",arrowtail="open",fontname="FreeSans.ttf"];
  Node21 [label="{vector\< IFormatterSchedulerListener * \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node8 -> Node21 [dir=back,color="orange",fontsize=10,style="dashed",label="\< IFormatterSchedulerListener * \>",fontname="FreeSans.ttf"];
  Node22 -> Node18 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="focusManager",arrowtail="open",fontname="FreeSans.ttf"];
  Node22 [label="{FormatterFocusManager *\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node23 -> Node18 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="documentEvents",arrowtail="open",fontname="FreeSans.ttf"];
  Node23 [label="{vector\< FormatterEvent * \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node8 -> Node23 [dir=back,color="orange",fontsize=10,style="dashed",label="\< FormatterEvent * \>",fontname="FreeSans.ttf"];
  Node24 -> Node18 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="typeSet",arrowtail="open",fontname="FreeSans.ttf"];
  Node24 [label="{set\< string \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node25 -> Node24 [dir=back,color="orange",fontsize=10,style="dashed",label="\< string \>",fontname="FreeSans.ttf"];
  Node25 [label="{set\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip="STL class."];
  Node26 -> Node18 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="documentStatus",arrowtail="open",fontname="FreeSans.ttf"];
  Node26 [label="{map\< FormatterEvent *, bool \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node10 -> Node26 [dir=back,color="orange",fontsize=10,style="dashed",label="\< FormatterEvent *, bool \>",fontname="FreeSans.ttf"];
  Node12 -> Node18 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="ruleAdapter",arrowtail="open",fontname="FreeSans.ttf"];
  Node27 -> Node18 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="compiler",arrowtail="open",fontname="FreeSans.ttf"];
  Node27 [label="{void *\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node28 -> Node18 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="layoutManager",arrowtail="open",fontname="FreeSans.ttf"];
  Node28 [label="{IFormatterMultiDevice *\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node29 -> Node1 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="documentEvents",arrowtail="open",fontname="FreeSans.ttf"];
  Node29 [label="{map\< string, FormatterEvent * \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node10 -> Node29 [dir=back,color="orange",fontsize=10,style="dashed",label="\< string, FormatterEvent * \>",fontname="FreeSans.ttf"];
  Node30 -> Node1 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="privateBaseManager",arrowtail="open",fontname="FreeSans.ttf"];
  Node30 [label="{PrivateBaseManager\n|- privateBases\l- mutexTable\l- _instance\l|+ createPrivateBase()\l+ release()\l+ addDocument()\l+ embedDocument()\l+ addVisibleDocument()\l+ getDocumentLocation()\l+ getEmbeddedDocumentLocation()\l+ getDocument()\l+ getEmbeddedDocument()\l+ getDocuments()\l+ removeDocument()\l+ removeEmbeddedDocument()\l+ clear()\l+ addRegion()\l+ removeRegion()\l+ addRegionBase()\l+ removeRegionBase()\l+ addRule()\l+ removeRule()\l+ addRuleBase()\l+ removeRuleBase()\l+ addTransition()\l+ removeTransition()\l+ addTransitionBase()\l+ removeTransitionBase()\l+ addConnector()\l+ removeConnector()\l+ addConnectorBase()\l+ removeConnectorBase()\l+ addDescriptor()\l+ removeDescriptor()\l+ addDescriptorBase()\l+ removeDescriptorBase()\l+ addImportBase()\l+ removeImportBase()\l+ addImportedDocumentBase()\l+ removeImportedDocumentBase()\l+ addImportNCL()\l+ removeImportNCL()\l+ addNode()\l+ addInterface()\l+ addLink()\l+ getPrivateBase()\l+ getInstance()\l- PrivateBaseManager()\l- ~PrivateBaseManager()\l- getPrivateBaseContext()\l- lockTable()\l- unlockTable()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classbr_1_1pucrio_1_1telemidia_1_1ginga_1_1ncl_1_1PrivateBaseManager.html"];
  Node31 -> Node30 [dir=back,color="midnightblue",fontsize=10,style="solid",arrowtail="empty",fontname="FreeSans.ttf"];
  Node31 [label="{IPrivateBaseManager\n||+ getDocumentLocation()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classbr_1_1pucrio_1_1telemidia_1_1ginga_1_1ncl_1_1IPrivateBaseManager.html"];
  Node32 -> Node30 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="mutexTable",arrowtail="open",fontname="FreeSans.ttf"];
  Node32 [label="{pthread_mutex_t\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node30 -> Node30 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="_instance",arrowtail="open",fontname="FreeSans.ttf"];
  Node33 -> Node30 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="privateBases",arrowtail="open",fontname="FreeSans.ttf"];
  Node33 [label="{map\< string, PrivateBaseContext * \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node10 -> Node33 [dir=back,color="orange",fontsize=10,style="dashed",label="\< string, PrivateBaseContext * \>",fontname="FreeSans.ttf"];
  Node34 -> Node1 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="data",arrowtail="open",fontname="FreeSans.ttf"];
  Node34 [label="{NclPlayerData *\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node35 -> Node1 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="timeBaseProvider",arrowtail="open",fontname="FreeSans.ttf"];
  Node35 [label="{ITimeBaseProvider *\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node36 -> Node1 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="compiler",arrowtail="open",fontname="FreeSans.ttf"];
  Node36 [label="{FormatterConverter *\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node37 -> Node1 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="currentDocument",arrowtail="open",fontname="FreeSans.ttf"];
  Node37 [label="{NclDocument *\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node28 -> Node1 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="multiDevice",arrowtail="open",fontname="FreeSans.ttf"];
}
